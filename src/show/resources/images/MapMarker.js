import React from 'react';
import PropTypes from 'prop-types';
import { View } from 'react-native';
import Svg, { G, Path } from 'react-native-svg';

import { colors, sizes } from 'Theme';

import style from './style';

const renderIcon = ({ icon, iconColor }) => {
  switch (icon) {
    case 'arrow-down':
      return (
        <>
          <Path
            d="M25.5731 37.9997L25.5729 37.9998L33.0719 45.6469L33.0899 45.6652L33.1058 45.6852C33.1075 45.6873 33.1088 45.6885 33.1095 45.6891L33.1096 45.6891C33.1098 45.689 33.11 45.6888 33.1102 45.6886C33.1115 45.6874 33.1125 45.6864 33.1131 45.6856L33.1292 45.6654L33.1473 45.6469L40.6463 37.9998L40.6559 37.9901L40.656 37.9902C40.6769 37.97 40.6914 37.9397 40.6928 37.9028C40.6941 37.8659 40.6819 37.8336 40.6615 37.8108L25.5731 37.9997ZM25.5731 37.9997L25.5633 37.9902M25.5731 37.9997L25.5633 37.9902M25.5633 37.9902C25.5426 37.9703 25.5269 37.938 25.5264 37.8994L25.5264 37.8994C25.5253 37.8167 25.5835 37.7824 25.6159 37.781L29.5575 37.781L30.0575 37.781L30.0575 37.281L30.0575 27.3727C30.0575 27.2969 30.0616 27.2251 30.0702 27.162C30.0738 27.1349 30.0781 27.1115 30.0825 27.0915L36.2301 27.0915C36.3796 27.1199 36.5147 27.2412 36.5565 27.4202L36.5565 37.281L36.5565 37.781L37.0565 37.781M25.5633 37.9902L37.0565 37.781M37.0565 37.781L40.6035 37.781M37.0565 37.781L40.6035 37.781M40.6035 37.781C40.6213 37.7817 40.6428 37.7897 40.6615 37.8108L40.6035 37.781ZM30.1076 27.0137C30.1076 27.0137 30.1074 27.014 30.107 27.0147L30.1076 27.0137Z"
            fill={iconColor}
            stroke={iconColor}
          />
          <Path
            d="M36.2656 24.858L29.9506 24.858C29.9188 24.858 29.8586 24.8252 29.8586 24.7413C29.8586 24.6574 29.9189 24.6246 29.9506 24.6246L36.2656 24.6246C36.2974 24.6246 36.3577 24.6574 36.3577 24.7413C36.3577 24.8252 36.2974 24.858 36.2656 24.858Z"
            stroke={iconColor}
          />
          <Path
            d="M36.2656 22.3914L29.9506 22.3914C29.9188 22.3914 29.8586 22.3586 29.8586 22.2746C29.8586 22.1908 29.9189 22.1579 29.9506 22.1579L36.2656 22.1579C36.2974 22.1579 36.3577 22.1908 36.3577 22.2746C36.3577 22.3585 36.2974 22.3914 36.2656 22.3914Z"
            stroke={iconColor}
          />
        </>
      );

    case 'arrow-up':
      return (
        <>
          <Path
            d="M41.0033 29.498L33.5043 21.8509C33.3232 21.6239 32.9997 21.5927 32.7818 21.7813C32.7575 21.8023 32.7351 21.8256 32.7149 21.8509L25.2159 29.498C24.9761 29.7295 24.9619 30.1197 25.1842 30.3695C25.2944 30.4934 25.4485 30.5647 25.6106 30.5669H29.1628L29.1628 40.4752C29.2302 40.8893 29.5517 41.2074 29.9522 41.2564H36.2671C36.5829 41.2564 36.6618 40.8453 36.6618 40.4752V30.5669H40.6086C40.9356 30.5625 41.1971 30.2828 41.1928 29.9422C41.1907 29.7733 41.1222 29.6128 41.0033 29.498Z"
            fill={iconColor}
          />
          <Path
            d="M36.2686 42.4899H29.9536C29.6267 42.4899 29.3616 42.766 29.3616 43.1066C29.3616 43.4472 29.6267 43.7233 29.9536 43.7233H36.2686C36.5956 43.7233 36.8606 43.4472 36.8606 43.1066C36.8606 42.766 36.5956 42.4899 36.2686 42.4899Z"
            fill={iconColor}
          />
          <Path
            d="M36.2686 44.9565H29.9536C29.6267 44.9565 29.3616 45.2327 29.3616 45.5733C29.3616 45.9138 29.6267 46.19 29.9536 46.19H36.2686C36.5956 46.19 36.8606 45.9138 36.8606 45.5733C36.8606 45.2327 36.5956 44.9565 36.2686 44.9565Z"
            fill={iconColor}
          />
        </>
      );

    case 'cart':
      return (
        <Path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M20.4435 18.3225C20.0294 18.1375 19.5403 18.3185 19.3517 18.7309C19.255 18.9426 19.256 19.1766 19.3397 19.3795H19L23.0923 21.7882L29.2686 42.317C27.387 43.289 26.5973 45.5667 27.511 47.4867C28.4481 49.4564 30.821 50.2997 32.8102 49.3747C34.5795 48.5518 35.485 46.5791 34.9433 44.7183L34.9429 44.7169C34.662 43.7777 34.0397 42.9821 33.2062 42.4763L45.8453 38.7572L45.8525 38.7545C46.2771 38.5923 46.4913 38.1184 46.3257 37.6947C46.1845 37.3331 45.8076 37.1207 45.424 37.1821L45.4116 37.1841L30.7757 41.5034L24.5857 21.0161L24.5854 21.0149C24.5246 20.8185 24.3911 20.6519 24.213 20.5483L20.4536 18.327L20.4435 18.3225ZM31.1011 43.5186C32.1462 43.5191 33.0652 44.1973 33.364 45.184C33.7198 46.4036 33.009 47.6804 31.771 48.0338C30.5318 48.3876 29.2398 47.6806 28.8832 46.4598C28.5268 45.24 29.2377 43.9626 30.476 43.6091C30.6793 43.551 30.8895 43.5206 31.1011 43.5186ZM30.22 31.7877L30.0328 31.8399L30.0332 31.8415C29.7998 31.0521 30.2578 30.2275 31.0517 29.9969L41.0277 27.0631L41.037 27.0603L41.0911 27.247L41.04 27.0595L41.0385 27.0599C41.8317 26.8306 42.6659 27.2794 42.9001 28.0678L44.7561 34.2402L44.7581 34.2468L44.7589 34.2494L44.5725 34.3047L44.7597 34.2525L44.7589 34.2494C44.9934 35.0392 44.5353 35.8647 43.7409 36.0954L33.7642 39.0295C33.6258 39.071 33.4815 39.0928 33.337 39.0939C32.6709 39.0966 32.0796 38.6658 31.8865 38.0321L30.0364 31.852L30.0337 31.843L30.22 31.7877ZM37.298 29.8892L41.3335 28.6803L43.1057 34.5743L39.0799 35.7614L37.298 29.8892ZM33.4266 37.4L31.6598 31.5242L35.7064 30.331L37.4881 36.2023L33.4266 37.4Z"
          fill={iconColor}
        />
      );

    case 'check':
      return (
        <Path
          stroke="null"
          id="svg_1"
          fill={iconColor}
          d="m29.26333,39.70622l15.59012,-15.86157l2.43897,2.25475l-18.03561,18.05595l-8.54925,-8.36831l2.23331,-2.45696l6.32245,6.37614z"
          clipRule="evenodd"
          fillRule="evenodd"
        />
      );
  }
};

const MapMarker = (props) => {
  const { bgColor, borderColor, size } = props;

  return (
    <View
      style={[
        style.mapMarkerWrapper,
        {
          width: size,
          height: size
        }
      ]}>
      <Svg
        width={size}
        height={size}
        viewBox="0 0 68 68"
        fill="none"
        xmlns="http://www.w3.org/2000/svg">
        <G filter="url(#filter0_d)">
          <Path
            d="M7 32C7 17.0883 19.0883 5 34 5C48.9117 5 61 17.0883 61 32C61 46.9117 48.9117 59 34 59H7V32Z"
            fill={bgColor}
          />
          <Path
            d="M5.5 59V60.5H7H34C49.7401 60.5 62.5 47.7401 62.5 32C62.5 16.2599 49.7401 3.5 34 3.5C18.2599 3.5 5.5 16.2599 5.5 32V59Z"
            stroke={borderColor}
            strokeWidth="3"
          />
        </G>

        {renderIcon(props)}
        {
          // TODO - add support for filters https://github.com/react-native-community/react-native-svg/pull/896
          //   <Defs>
          //   <Filter
          //     id="filter0_d"
          //     x="0"
          //     y="0"
          //     width="68"
          //     height="68"
          //     filterUnits="userSpaceOnUse"
          //     colorInterpolationFilters="sRGB">
          //     <FeFlood floodOpacity="0" result="BackgroundImageFix" />
          //     <FeColorMatrix
          //       in="SourceAlpha"
          //       type="matrix"
          //       values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          //     />
          //     <FeOffset dy="2" />
          //     <FeGaussianBlur stdDeviation="2" />
          //     <FeColorMatrix
          //       type="matrix"
          //       values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0"
          //     />
          //     <FeBlend
          //       mode="normal"
          //       in2="BackgroundImageFix"
          //       result="effect1_dropShadow"
          //     />
          //     <FeBlend
          //       mode="normal"
          //       in="SourceGraphic"
          //       in2="effect1_dropShadow"
          //       result="shape"
          //     />
          //   </Filter>
          // </Defs>
        }
      </Svg>
    </View>
  );
};

MapMarker.propTypes = {
  bgColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  borderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  icon: PropTypes.string,
  iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  size: PropTypes.number
};

MapMarker.defaultProps = {
  bgColor: colors.input,
  borderColor: colors.white,
  icon: 'arrow-down',
  iconColor: colors.white,
  size: sizes.marker.normal
};

export default MapMarker;
